import os
import time
import yt_dlp
from .config import (
    DOWNLOADER_BROWSER,
    DOWNLOADER_OUTPUT_PATH,
    YTDLP_OPTS,
)


def download_video(video_url, retries=3, delay=10):
    """
    Download a video from a given URL using yt-dlp's browser cookie import,
    with a retry mechanism.
    """
    if not os.path.exists(DOWNLOADER_OUTPUT_PATH):
        os.makedirs(DOWNLOADER_OUTPUT_PATH)

    ydl_opts = YTDLP_OPTS.copy()
    ydl_opts.update(
        {
            "outtmpl": os.path.join(DOWNLOADER_OUTPUT_PATH, "%(id)s.%(ext)s"),
            "cookies-from-browser": DOWNLOADER_BROWSER,
            "quiet": True,
            "no_warnings": True,
            "verbose": False,
        }
    )

    for i in range(retries):
        print(f"üì• –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ (–ø–æ–ø—ã—Ç–∫–∞ {i + 1}/{retries})...")
        try:
            with yt_dlp.YoutubeDL(ydl_opts) as ydl:
                info = ydl.extract_info(video_url, download=True)
                downloaded_file = ydl.prepare_filename(info)
                print(f"‚úÖ –í–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ: {downloaded_file}")
                return downloaded_file
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {e}")
            if i < retries - 1:
                current_delay = delay * (2**i)
                print(f"‚è≥ –ü–∞—É–∑–∞ {current_delay} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π...")
                time.sleep(current_delay)

    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –ø–æ—Å–ª–µ {retries} –ø–æ–ø—ã—Ç–æ–∫.")
    return None
